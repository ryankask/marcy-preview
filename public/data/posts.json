[
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "**TL; DR** Don’t use a string literal as the value of the sender attribute when defining your own [Django signals](https://docs.djangoproject.com/en/dev/topics/signals/).\r\n\r\nI got bit by a nasty bug today using Django’s signal framework. I used the signal like so:\r\n\r\n    :::python\r\n    show_user_widget_responses = show_user_widget.send(\r\n        sender='my_widget_view',\r\n        user=user\r\n    )\r\n\r\nI ran the tests to make sure the signal was being sent to the listeners (i.e receivers) and they all passed. I then noticed the view sent another signal in certain conditions and its sender was a set to a different string. For the sake of consistency, **I changed the above signal’s sender string to “widget-user-view”** and went to make a cup of tea.\r\n\r\nWhen I returned to my desk, I got a bit distracted and continued to work on the feature. I ran the app’s tests and they started failing: the test listeners weren't being called. Oops.\r\n\r\n<!-- preview -->\r\n\r\nMy first inclination was that I forgot to change the sender argument in “show_user_widget.connect.” Nope… the tests were still failing. I decided to change the sender argument in the send call to “widget” and the tests started passing again. What was going on? I proceeded to try new sender values and I soon came to believe that hyphens weren’t allowed in sender arguments that were strings. When I start thinking like this, I know that it’s time to take a step back and use Google.\r\n\r\nOne of the first hits I came across was [ticket #16447: settings_changed signal uses strings for sender](https://code.djangoproject.com/ticket/16447), filed by Alex Gaynor. He noticed that when he ran Django’s tests using [PyPy](http://pypy.org/), the test that checked the “settings_changed” signal started failing. This was exactly my problem, so what was going on?\r\n\r\nIt turns out that Django’s signal dispatcher code uses the id() of the sender argument as part of the “key” to the receiver (which I’ve always called a “listener”).  Here is the relevant code in [django.dispatch.dispatcher](https://code.djangoproject.com/browser/django/trunk/django/dispatch/dispatcher.py):\r\n\r\n    :::python\r\n    def _make_id(target):\r\n        if hasattr(target, 'im_func'):\r\n            return (id(target.im_self), id(target.im_func))\r\n        return id(target)\r\n\r\nHere is how the key is defined if “dispatch_uid” is not set (in Signal.connect):\r\n\r\n    :::python\r\n    lookup_key = (_make_id(receiver), _make_id(sender))\r\n\r\nThis is the core of Signal.send:\r\n\r\n    :::python\r\n    for receiver in self._live_receivers(_make_id(sender)):\r\n        response = receiver(signal=self, sender=sender, **named)\r\n        responses.append((receiver, response))\r\n\r\nAnd finally, here is the important section of Signal._live_receivers:\r\n\r\n    :::python\r\n    def _live_receivers(self, senderkey)\r\n        ...\r\n        for (receiverkey, r_senderkey), receiver in self.receivers:\r\n            if r_senderkey == none_senderkey or r_senderkey == senderkey:\r\n            ...\r\n        ...\r\n\r\nOnce this implementation detail is known, it becomes obvious that this is a manifestation of the [difference between identity and equality](http://stackoverflow.com/questions/2987958/how-is-the-is-keyword-implemented-in-python/2987975#2987975): id(“my-string”) is not guaranteed to always return the same integer even though “my-string” == “my-string”. Because I used a string literal as the argument, new string objects with potentially different identities were being created in each call. I don’t know exactly why their identity differs, but the behavior is easily observable in the shell:\r\n\r\n    :::python\r\n    >>> id('widget-user-view')\r\n    37951112\r\n    >>> id('widget-user-view')\r\n    37951232\r\n    >>> id('widget-user-view')\r\n    37951272\r\n    >>> id('widget-user-view')\r\n    37951112\r\n    >>> id('widget-user-view')\r\n    37951232\r\n\r\nBut… certain strings, like my original value of sender, “my_widget_view,” will return the same integer ID:\r\n\r\n    :::python\r\n    >>> id('my_widget_view')\r\n    37951192\r\n    >>> id('my_widget_view')\r\n    37951192\r\n    >>> id('my_widget_view')\r\n    37951192\r\n    >>> id('my_widget_view')\r\n    37951192\r\n\r\nSo, the moral of the story is: don’t use string literals for the sender argument when implementing custom signals in Django. It turns out to be tricky to debug. If you’re sending a signal from a class and want a good value for sender, try “self.__class__.”  As **Justin** pointed out in a comment, you can use a string for the value of sender if you use that same string variable as the argument in each call to the signal methods (you must import the string along with the signal).\r\n\r\nI still think it’s better to avoid strings as senders altogether. The ticket filed by Alex Gaynor referenced above used a setting name as the sender and it wouldn’t be long before someone tried:\r\n\r\n    :::python\r\n    signals.settings_changed.connect(listener, sender=\"SOME_SETTING\", ...)\r\n\r\nrather than the more correct\r\n\r\n    :::python\r\n    from django.conf import settings\r\n    signals.settings_changed.connect(listener, sender=settings.SOME_SETTING, ...)\r\n\r\nIt’s a subtle bug waiting to happen and is indeed [why the test failed](https://code.djangoproject.com/changeset/16530/django/trunk/tests/regressiontests/settings_tests/tests.py) for Alex. Furthermore, you also may not even need to pass a value for sender, if, for example, you only use Signal.send in one place or if the listener (receiver) doesn’t need to use it. (see the code reference above: _make_id(None) is also checked).\r\n\r\nAnother mistake I made in my code is now obvious: always use “constants” (i.e. BIG_BOLD_VARIABLES defined at the top of the module) instead of peppering the same string literal around your code.\r\n\r\nI later found [another ticket](https://code.djangoproject.com/ticket/13132) that describes the same problem. One core dev marked it as “wontfix” and I agree that there is nothing to fix in the code. But given that another core dev made the same mistake in [changeset 16327](https://code.djangoproject.com/changeset/16237), I think this behavior should be documented and the next time I get some free time, I will submit a documentation patch (after I write my dissertation :).\r\n\r\n<hr>\r\n\r\nBecause I moved my blog and can't move the comments, I've reproducded them below:\r\n\r\n**Justin** (8 August, 2011 @ 11:52 PM)\r\n\r\nOf course, you could do something along the lines of:\r\n\r\n    :::python\r\n    WIDGET_SENDER='my_widget_view'\r\n    show_user_widget_responses = show_user_widget.send(\r\n        sender=WIDGET_SENDER,\r\n        user=user\r\n    )\r\n\r\nAnd just reuse WIDGET_SENDER. The string is defined once, it will have one ID. The example you've posted should demonstrate what's happening here - each time you use 'my_widget_view' you're recreating that string, so it gets a new ID.\r\n\r\n**Ryan (me)** (9 August, 2011 @ 7:28 AM)\r\n\r\nThanks Justin!\r\n\r\nYes, you are definitely correct. Of course I miss the most obvious solution after posting this.  I’ve updated the post’s title to reflect that you can use the same string, just not string literals that happen to be equivalent.\r\n\r\nNonetheless, I the only time I would use a string is if I was sending the signal from outside a class. It’s better if sender is MyForm or MyClassBasedView, just as Django sends MyModel.\r\n\r\n**Ulrich Petri** (9 August, 2011 @ 10:11 AM)\r\n\r\nThe reason why some strings have identical id() values is that python does string interning for some short strings.\r\n\r\nWikipedia has an explanation: [http://en.wikipedia.org/wiki/String_interning](http://en.wikipedia.org/wiki/String_interning)",
    "created": "Wed, 14 Nov 2012 19:07:34 GMT",
    "id": 1,
    "modified": "Sun, 10 Feb 2013 17:22:51 GMT",
    "pub_date": "Mon, 08 Aug 2011 16:49:00 GMT",
    "slug": "dont-use-strings-as-sender-values-in-djangos-signal-dispatcher",
    "status": "published",
    "tags": [
      {
        "id": 3,
        "name": "django",
        "slug": "django"
      },
      {
        "id": 6,
        "name": "programming",
        "slug": "programming"
      },
      {
        "id": 5,
        "name": "web development",
        "slug": "web-development"
      }
    ],
    "title": "Don’t Use String Literals for Sender Values in Django’s Signal Dispatcher"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "A few months ago I started taking [Polish language](http://en.wikipedia.org/wiki/Polish_language) classes at [Polword](http://www.polword.co.uk/) near [Oxford Circus](http://en.wikipedia.org/wiki/Oxford_Circus) in central London. It has since become my favorite weekly activity. The school is conveniently located and is staffed by lovely native Polish speakers who can teach well.\r\n\r\nEven though I only have class once a week, I know that I won’t ever learn the language if I don’t practice every day. To help enrich my vocabulary, I’ve created a spreadsheet on Google Docs that has my [Polish words of the day](https://docs.google.com/spreadsheet/ccc?key=0AtdqXquJH4IYdDRLS0ZET2R5Nk12aGlxUVZDVVFKQ3c) (polskie słowa dnia Ryana). Every day I will add a new noun (rzeczownik), adjective (przymiotnik), and verb (czasownik) to the list.\r\n\r\nI find daily doses of information coupled with weekly reviews to be good for long term retention. I used this same method when learning the basic key sequences for [emacs](http://www.gnu.org/s/emacs/) commands and it definitely helps.\r\n\r\nToday’s words, the first on the list so far, are:\r\n\r\n* grzyb (m) – mushroom\r\n* głośny – loud, noisy\r\n* pilnować (aspekt dokonany: dopilnować) – to look after, watch, guard (among other meanings)\r\n\r\n<a href=\"https://www.flickr.com/photos/32050584@N06/2999420684/\">\r\n![Mushroom](/static/img/blog/posts/grzyb.jpg \"Grzyb - mushroom\")\r\n</a>",
    "created": "Wed, 14 Nov 2012 19:09:22 GMT",
    "id": 2,
    "modified": "Wed, 14 Nov 2012 19:09:56 GMT",
    "pub_date": "Sat, 19 Nov 2011 16:29:00 GMT",
    "slug": "polish-words-of-the-day",
    "status": "published",
    "tags": [
      {
        "id": 1,
        "name": "language",
        "slug": "language"
      },
      {
        "id": 11,
        "name": "learning",
        "slug": "learning"
      },
      {
        "id": 2,
        "name": "polish",
        "slug": "polish"
      }
    ],
    "title": "Polish Words of the Day"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "Every day, from November 19, 2011 to February 29, 2012, I added three new Polish words to a Google Docs Spreadsheet called [Polskie Słowa Dnia Ryana](https://docs.google.com/spreadsheet/ccc?key=0AtdqXquJH4IYdDRLS0ZET2R5Nk12aGlxUVZDVVFKQ3c). It wasn't always easy to keep the list updated, but I did it.\r\n\r\nThe goal of the spreadsheet was to help me learn a new Polish noun, adjective, and verb each day. I failed, and I’m happy about that.\r\n\r\nToo much time was spent finding words and filling them in rather than making sure I really learned them. I realized this about a month or two ago and wrote a “quiz game” that downloaded the words and tested my memory of them in the terminal. This worked okay but it was highly specific to my word set and wouldn’t have scaled well.\r\n\r\n![My Polish Words of the Day Quiz](/static/img/blog/posts/pwords0.png)\r\n*My Polish Words of the Day quiz*\r\n\r\nEven though I won’t be updating the Google Docs spreadsheet, I’m not going to stop trying to learn new Polish words. To better focus my efforts, I will be using [Quizlet](http://www.quizlet.com/) exclusively.\r\n\r\n## Quizlet to the rescue\r\n\r\nQuizlet is pretty awesome. Let’s say you had a term (i.e. a flashcard) with “waitr (m)” on one side and “wind” on the other. Quizlet helps you memorize the word and definition in numerous ways but one of them really stands out: **Speller**. This functionality it sweet. When you start, a woman’s voice comes on and says “wiatr” in a correct Polish accent (you can change the settings to have her speak quickly or slowly). The definition appears on he right. You then have to type the word correctly before the quiz moves on to the next word. The program will ensure that you spell each term correctly twice and then shows your some pretty statistics. (understandably, there are still some bugs in the ways certain words are pronounced.)\r\n\r\n![The Quizlet speller interface](/static/img/blog/posts/quizlet-speller-lato.png)\r\n*The Quizlet speller interface*\r\n\r\nNotice that my term included the gender of the noun in parenthesis (“m” for rodzaj męski, or masculine).\r\n\r\nSpeller ignores anything in parenthesis so this provides a convenient way to add in important grammatical information without being forced to reproduce it verbatim in a quiz. This is a really important concept when learning languages.\r\n\r\n<!-- preview -->\r\n\r\n## Learning a Polish verb\r\n\r\nLearning Polish, or Latin, or probably any language’s words usually doesn’t fit neatly into two sides of a flashcard.\r\n\r\nTo better understand the problem of the flashcard model for memorizing words in a foreign language, let’s try to learn a Polish verb . For this example, I will use **składać**, which in English means “to put together” or “to fold.”\r\n\r\nLet’s pretend that we created a term on Quizlet and on the “front” side we entered “składać” and the back “to put together; to fold.” If we played the spelling game, the woman would say “składać” and we would show the definition on the right. To move on to the next word, we type “składać.” Easy.\r\n\r\nExcept it’s never that easy learning languages. Polish verbs can be quite complex and to fully learn one you need to memorize several parts:\r\n\r\n1. The infinitive (składać)\r\n2. The first person present singular (składam)\r\n3. The second person present singular (składasz)\r\n\r\nThis is example is quite regular with respect to its endings, but some verbs differ significantly in all three parts. Consider **brać** (to take):\r\n\r\n1. Infitnitive – brać\r\n2. First person present singular – biorę\r\n3. Second person present singular – bierzesz\r\n\r\nThis examples make it a bit clearer why all three parts are needed to really “get it.”\r\n\r\nThe fun doesn’t stop there, though. The above verbs are of the *imperfective aspect*, a grammatical category of Slavic verbs. Most imperfective Polish verbs are paired with another verb of the *perfective aspect*. To *really* learn a verb, you also need to memorize its perfective partner and the same parts mentioned above.\r\n\r\nThe perfective counterpart of składać is **złożyć** and that of brać is **wziąć**. Notice that the perfective verbs bear no resemblance to the imperfective versions. Let’s break these down according to number:\r\n\r\n1. Infinitive – złożyć, wziąć\r\n2. First person present singular – złożę, wezmę\r\n3. Second person present singular – złożysz, weźmiesz\r\n\r\n*(note that I’ve purposely chosen two verbs that have totally different imperfective and perfective versions. Most verbs aren’t like this)*\r\n\r\nWhen I recorded these examples in my Polskie Słowa Dnia Ryana, the cells looked like:\r\n\r\n* składać [składam, składasz] (złożyć [złożę, żłożysz]) – to fold, assemble sth, hand in, express, pay (i.e., a visit). _ się – to fold up, chip in\r\n* brać [biorę, bierzesz] (wziąć [wezmę, weźmiesz]) – to take (grab with the hands). ~ się do + gen – to set about doing sth; ~ się za + acc – to take up sth.\r\n\r\nNo wonder I didn’t really learn my words. The information, while necessary, is too condensed and not suitable for easy learning.\r\n\r\n## Throwing away the complexity\r\n\r\nAnother great feature of Quizlet is its [fantastic API](https://quizlet.com/api/2.0/docs/) that allows you to download your word sets and create new ones. I took advantage of this by importing my Polish Words of the Day Google Docs spreadsheet into Quizlet via the API (surprisingly their normal CSV import feature doesn’t understand quoted values making this option impossible).\r\n\r\nThe nouns and adjectives are well suited for Quizlet and I am already enjoying going back over my words and truly learning them.\r\n\r\nVerbs, as we observed above, are a lot more complex. How is Quizlet supposed to deal with a term that has:\r\n\r\n* on the front: składać [składam, składasz] (złożyć [złożę, żłożysz])\r\n* on the back: to fold, assemble sth, hand in, express, pay (i.e., a visit). _ się – to fold up, chip in\r\n\r\n![A really complex term](/static/img/blog/posts/quizlet-complex-term.png)\r\n*Hopelessly complex and not compatible with the way Quizlet works.*\r\n\r\nI don’t know the exact answer. In the speller game, if the lady says “składać, składam, składasz,” Quizlet seems to accept “składać” and doesn’t require me to type the other forms. However, this isn’t always the case and I’ve encountered some bugs where the quiz doesn’t accept any answer and I get stuck. The fact that it accepts “składać” on its own might be a bug.\r\n\r\nNotice, too, that there is nothing about składać’s perfective counterpart złożyć in the quiz. Because the quiz ignore text in parenthesis, I don’t even see the verb anywhere on the page — it may as well not be there.\r\n\r\nWhile Quizlet isn’t perfect, I can’t expect it to understand the nuances of all languages, let alone those of my particular style of input.\r\n\r\nI’ve decided to fall back on the old maxim “keep it simple, stupid” ([KISS](http://en.wikipedia.org/wiki/KISS_principle)). From now on, whenever I input a verb in Quizlet, I will only enter the absolute minimum required to learn the verb pair.\r\n\r\nFor a verb like **mieszkać**, I will only enter that, **mieszkam**, and its perfective counterpart **zamieszkać**. I know that any verb ending in -am in the first person present singular ends in -asz in the second person for that tense. The same goes for a verb that ends in -em in the first person present singular.\r\n\r\n![A simple term](/static/img/blog/posts/quizlet-simple-term.png)\r\n*Much simpler!*\r\n\r\nFor more complex verbs, more terms will be needed and there could be up to six (!) per verb pair. While this requires more typing, I believe it will greatly improve my rate of memorization. Time will tell if my prediction is correct and I will post a detailed evaluation of my effort in the near future.\r\n\r\nThat’s all for now! To view my term sets, check out [my profile page on Quizlet](http://quizlet.com/user/ryankask/) (I’m now a PLUS member!). I’ve made all my sets public so if you are one of the few English speakers learning Polish, enjoy!\r\n\r\n## Update (October 29, 2012)\r\n\r\nI’ve just began the process of converting my Quizlet verb sets to simple imperfective/perfective pairs. Inputting all the possible forms of a verb simply takes to long to input and study. In addition, many of the verbs follow the same patterns. It’s more helpful to learn the patterns than each individual “irregular” form. With a more manageable task at hand, I’ll hopefully be able to complete my verb list.",
    "created": "Wed, 14 Nov 2012 19:11:05 GMT",
    "id": 3,
    "modified": "Wed, 14 Nov 2012 19:15:48 GMT",
    "pub_date": "Sun, 04 Mar 2012 11:41:00 GMT",
    "slug": "discontinuing-ryans-polish-words-of-the-day",
    "status": "published",
    "tags": [
      {
        "id": 1,
        "name": "language",
        "slug": "language"
      },
      {
        "id": 11,
        "name": "learning",
        "slug": "learning"
      },
      {
        "id": 2,
        "name": "polish",
        "slug": "polish"
      }
    ],
    "title": "Discontinuing Ryan’s Polish Words of the Day"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "Well... sort of. On May 11, 2012, several students and teachers gathered at my language school, [Polword](http://www.polword.co.uk/en/), to watch the classic Polish film *[Seksmisja](http://www.imdb.com/title/tt0088083/)*.\r\n\r\nI wrote a [short review](http://www.polword.co.uk/en/culture-events-news/news/2012-05-11-polword-film-club-evening-seksmisja.php) of the event (in Polish, of course) and it was posted on their website. Check it out!\r\n\r\n![Title](https://ryankaskel.com/static/img/blog/posts/seksmisja.jpg)",
    "created": "Wed, 14 Nov 2012 19:12:19 GMT",
    "id": 4,
    "modified": "Sun, 10 Feb 2013 17:22:00 GMT",
    "pub_date": "Mon, 18 Jun 2012 11:13:00 GMT",
    "slug": "published-in-polish",
    "status": "published",
    "tags": [
      {
        "id": 1,
        "name": "language",
        "slug": "language"
      },
      {
        "id": 2,
        "name": "polish",
        "slug": "polish"
      }
    ],
    "title": "Published in Polish!"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "Just over a year ago, I started reading *[Anna Karenina](http://www.amazon.co.uk/gp/product/B0048EK3TC/) *by Leo Tolstoy. *(note: all links point to the edition of the translation I read)* I loved the story and a few months later read Tolstoy’s other great novel, *[War and Peace](http://www.amazon.co.uk/gp/product/B004ELAHJA/)*. Since reading these two epic works, my fiction reading time has mainly focused on nineteenth century Russian literature.\r\n\r\nIn the introduction to *[Fathers and Children](http://www.amazon.co.uk/Fathers-Children-Ivan-Sergeevich-Turgenev/dp/1857150171/)* by Ivan Turgenev, several references are made to Fyodor Dostoyevsky’s criticism of the short novel’s author. Since I thoroughly enjoyed *Fathers and Children*, I felt compelled to see if the Russian literary giant’s not-so-subtle jabs at Turgenev were justified. I found myself in the unusual situation of never having read any of Dostoyevsky’s works, despite the insistence of my family. No doubt the order in which you read an author’s stories has a tremendous impact on your lifelong relationship with the writer and his or her works. For better or worse, I set off reading the translated corpus of Dostoyevsky in the chronological order of each title’s publication.\r\n\r\nIn 1844, Dostoyevsky finished his first novel, *Poor Folk*, and a year later it was published and very well received by Moscow’s literary critics. He first passed the completed book to a few colleagues and recalls the joy he felt after seeing their reaction to it:\r\n\r\n<img class=\"right\" title=\"poor-folk-cover\" src=\"/static/img/blog/posts/poor-folk-cover.jpg\" alt=\"Poor Folk book cover\" width=\"185\" height=\"352\">\r\n\r\n> Some people have success, they are praised, greeted, congratulated, yet these men came running in tears, at four o’clock in the morning to wake me up because this was more important than sleep… How wonderful! [1]\r\n\r\nThe novel stood out to me not because of its plot or a particularly memorable character, but because it is so different than the other Russian works I had previously read. Instead of writing in the typical third person, the story is composed of a series of first-person letters sent between the two main characters. The difference in format underscores the contrasting elements between this novel, and another like, say, *Anna Karenina*. The characters are devastatingly poor. The male correspondent, Makar Devushkin, carelessly bankrupts himself as he fruitlessly lavishes his sweetheart with small but meaningful gifts. He trudges to work in sole-less boots and can hardly afford a new a pair. The gloomy, cramped lodging houses of the Saint Petersburg portrayed in *Poor Folk* are a world away from lush sitting rooms of the city’s mansions in *Anna Karenina*.\r\n\r\n## “The Landlady”\r\n\r\nThe next selection in the edition of *Poor Folk* I read and the focus of this blog post is Dostoyevky’s “The Landlady.” It is a short story he wrote in 1847 and it is one of the strangest I have ever read. Indeed, the goal of this little writing exercise is to try to better understand the unusual piece. For those familiar with Polish director and screenwriter [Krzysztof Kieślowski](http://en.wikipedia.org/wiki/Krzysztof_Kie%C5%9Blowski), a film adaption of this book would make an excellent eleventh commandment for [The Decalogue](http://en.wikipedia.org/wiki/The_Decalogue). Like Kieślowski, Dostoyevsky establishes a spooky, almost surreal atmosphere for the plot. In the remainder of this entry, I explain which elements of “The Landlady” led me to this comparison while consciously trying not to retell the story or give away too much. Admittedly, this is a tough task so I only touch on the themes I introduce.\r\n\r\nIn the future, I plan to read [Constance Garnett’s translation](http://books.google.co.uk/books?id=hyp1G6iN1wkC) to see how it stacks up to the one I read by [David McDuff](http://en.wikipedia.org/wiki/David_McDuff). While debates on the merits of almost every translation of nineteenth century Russian novels into English rage on the internet, the quality of the translation of this short story seems particularly important. A comparison of the two would be interesting.\r\n\r\n<!-- preview -->\r\n\r\n## Impulse\r\n\r\nI read the story in my free time almost non-stop. Part of its draw was the impulsiveness of the main character, Vasily Mikhailovich Ordynov. Forced to move from the flat in which he lived and studied as a self-described hermit, Ordynov uncomfortably trawls the streets of Saint Petersburg without any direction or goal:\r\n\r\n> Now he wandered about the streets like an alien outcast, like an anchorite who had suddenly emerged from his silent wilderness into the bustling, noisy city. [2]\r\n\r\nDuring the drifting, deep thoughts emerge about his self-worth. Only after being forced from his home does Ordynov contemplate his recent isolation. He despairs at his acknowledgment of never having been loved nor having loved any other himself. The faces around him in the streets give him “strange looks” which he interprets as them taking “him for a madman or at least for a most peculiar eccentric, which was not, after all, very far off the mark.” [3]  Ordynov ponders his empty future and ruminates over his childhood experiences, lost in hallucinatory-like thoughts.\r\n\r\nThe aimlessness of his meditations are reflected in his physical position. He doesn’t notice that he’s suddenly deep into the Petersburg suburbs, far from his starting point; Ordynov had no intention of being in this location. He finds himself in a small square with a parish Church on one side and “without really thinking about it,” [4] steps inside. On many other occasions, Dostoyevsky (or rather, McDuff) uses similar phrases: “he scarcely noticed,” “didn’t understand how it all happened,” “barely conscious of what he was saying.” [5] The plot of the short story is driven by Ordynov’s impetuosity which he sometime notices: “He realized himself the strangeness of the impulse by which he had been carried away.” [6] The main character’s disorder entices you to keep on reading.\r\n\r\n## Obsession\r\n\r\nWhile in the church, Ordynov’s attention is directed to a couple which even he finds odd. An old man (Murin) leads his younger wife (Katerina), who has a “childishly tender, gentle face,” to pray at the alter. [5] Dostoyevsky’s confused protagonist falls in love at first sight of this woman and he is compelled to stalk the couple after they leave: “[he] followed them without having any clear idea of why he had done it.” [6] A disturbing magnetism pulls him close and closer to this puzzling woman. In the next two days, he “accidentally” bumps into the pair several times and tracks them to their living quarters with the intention of taking a room.\r\n\r\nThe following day he proceeds to the same church and finds “*his* mysterious lady” is there. [7] The object of his love becomes his own after just one sighting. Within only a few days, the young man, who at the beginning of the story lamented the absence of love in his life, develops a fierce obsession driven by a youthful, albeit creepy, passion for the beautiful Katerina. When the two characters are in each other’s presence, audible heartbeats, trembling, and tears accentuate the ferocity of their affair. I feel that that Tolstoy’s two “super” novels are completely devoid of infatuation of this intensity. Although I’ve read only a few Russian works, only Makar’s love in *Poor Folk*, while less extreme, is on the same scale or is perhaps capable of reaching the same level.\r\n\r\n## Mysticism\r\n\r\nThe final element of “The Landlady” I will discuss is the strange role religion plays in the story and how it contributes to the deliberate disorientation that pervades the plot. Ordynov first comes across the mysterious couple in a church and their piety is an important component of the narrative; it adds to the occult mood. An icon presides over the corner of a small room in their flat and religious books lie scattered everywhere. Murin is obsessed with these books and this drives Ordynov to try to ascertain who he is and what he does. He never quite finds an answer to his satisfaction but at various points Murin is called a fortune teller, a sorcerer, and a mystic who at one point was put under police surveillance for his bold displays of clairvoyance that disturbed the local community. [8] The devil is often mentioned and evil forces always seems to be in close proximity to the main characters.\r\n\r\nTowards the end of the story, at its climax, Ordynov, Murin, and Katerina sit in a room in the flat draining bottles of wine. In a state of frenzied inebriation, an inflamed, perspiring Katerina screams to her partner, the mysterious Murin:\r\n\r\n> Tell me my fortune, old man! Tell it for me, father, tell it before you drink your mind away; here is my white palm! After all, it is not for nothing that they call you a sorcerer. you have learned from books, and know the black lore inside out! … Tell me, old man, are you and I to while away our lives much longer in this soulless corner reading black books … When she finished, he merely smiled.\r\n\r\nDelightfully weird, right?\r\n\r\n<hr>\r\n\r\nI’ve outlined what I think are the most interesting aspects of Dostoyevsky’s strange tale. There are certainly many other themes that are present and deserve more attention: consciousness and unconsciousness, illness, and age, just to name a few. Even after writing this little commentary, I’m still unsure of what was real in the story and what took place in a dream; Ordynov himself often doesn’t know. Perhaps this feeling of mystery is why I am so drawn to it. It surely is a little tale your are bound to love or hate but I thoroughly recommend it if you are at all curious.\r\n\r\nAfter reading just two of Dostoyevky’s works, I have already failed in my effort to read them all in the order of their publication. *[The Double](http://www.amazon.co.uk/gp/product/B000PDZFHA/)* and another short story, ”Mr. Prokharchin,” were both written in between *Poor Folk* and “The Landlady.” I plan to read those two next. Eventually I will read all of Dostoyevky’s books and I eagerly await to see how the great Russian author’s style changes over time.\r\n\r\n<hr>\r\n\r\n[1] Dostoyevsky, F. M. (1988). Poor Folk and Other Stories (D McDuff, Trans.). New York, NY: Penguin Classics. (Original work published 1845).\r\n\r\n[2] Ibid., location 2656 (all references are, unfortunatley, made to the Kindle edition of this book which does not have page numbers).\r\n\r\n[3] Ibid., location 2670.\r\n\r\n[4] Ibid., location 2684.\r\n\r\n[5] Ibid., locations (in order) 2778, 2831, 3345.\r\n\r\n[6] Ibid., location 2725.\r\n\r\n[7] Ibid., location 2698.\r\n\r\n[8] Ibid., location 2712.\r\n\r\n[9] Ibid., location 2753. Emphasis mine.\r\n\r\n[10] Ibid., location 3194.",
    "created": "Wed, 14 Nov 2012 19:14:20 GMT",
    "id": 5,
    "modified": "Sun, 10 Feb 2013 17:21:44 GMT",
    "pub_date": "Sat, 06 Oct 2012 13:30:00 GMT",
    "slug": "the-landlady-by-fyodor-dostoyevsky",
    "status": "published",
    "tags": [
      {
        "id": 10,
        "name": "books",
        "slug": "books"
      }
    ],
    "title": "The Landlady by Fyodor Dostoyevsky"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "This week I migrated my little blog from [Wordpress](http://wordpress.org/) to a new open-source app I wrote over the last month called [Esther](https://github.com/ryankask/esther).\r\n\r\nEsther uses [Flask](http://flask.pocoo.org/), a Python web microframework, and [Zurb Foundation](http://foundation.zurb.com/) for style to deliver a small, well-tested, and responsive blogging engine. While it lacks the breadth of features and plugins that Wordpress supports, I'm happy that I'm using something I wrote in production and it will only get better.\r\n\r\nIn this post I'm going to document some of the tools I used to build Esther and discuss some of the features I'd like to roll out over the next few months.\r\n\r\n## Compass is a Big Deal\r\n\r\nWhile everyone is using [Bootstrap](http://twitter.github.com/bootstrap/) these days (including me at my day job), I like to take the road less traveled and decided to use its \"competitor,\" Zurb Foundation, instead. It's a great front-end framework to get the ball rolling and I can't wait to customize the design over time. I'd like to move away from the default style as soon as possible.\r\n\r\nFoundation can be used, much like Boostrap, in two ways. You can download the CSS and Javascript files and use them as is, or you can integrate the framework's CSS preprocessor files' compilation into your work-flow. Bootstrap uses [LESS](http://lesscss.org/) while Foundation uses [Sass/SCSS](http://sass-lang.com/). I went with the latter option and it's been one of the most important decisions I've made in the past year. I can honestly say that *I love writing front-end code now*. Here's why.\r\n\r\n<!-- preview -->\r\n\r\nOne of the benefits of using a CSS preprocessor like Sass is that it allows you to write mixins. When you hear Sass, a mention of **[Compass](http://compass-style.org/)** usually isn't too far away. Compass does a lot of things like compile your SCSS files into CSS, but it also provides a wealth of mixins you can use in your own SCSS files. Need image sprites? A CSS reset? Compass gives you the CSS for these features via mixins.\r\n\r\nAnother really powerful feature of the framework is that you can consume mixins and styles written by third-party developers packaged as Ruby gems. Want to use a grid for your website? Look no further than Eric A. Meyer's [Susy](http://susy.oddbird.net/). What about great typography as a result of pre-calculated units? Check out [modular-scale](https://github.com/scottkellum/modular-scale). Zurb Foundation itself is ultimately a huge Compass project that Esther consumes.\r\n\r\nEvery so often you come across a tool that transforms your development work-flow and changes your life, and I'm not exaggerating when I say that Compass is one of those tools. It sits in a list of venerable software that includes the likes of **[emacs](http://www.gnu.org/software/emacs/)** and **[tmux](http://tmux.sourceforge.net/)**. I'm not doing it justice here so I highly recommend trying it out. It took me a few weeks to really grasp its power but it's now an indispensable tool in my belt.\r\n\r\nAnyway, enough of the fanboyism. Let's move on to the back-end set up.\r\n\r\n## Flask and its extensions ecosystem\r\n\r\nI'm a big fan of [Django](https://www.djangoproject.com/) and use it every day at work. Despite that, I used Flask for this project and it was a welcome change.\r\n\r\nFlask is written by [Armin Ronacher](http://lucumr.pocoo.org/), one of the developers I respect most in the Python community. It has won the plaudits of many well-respected Python developers so I'm not going to add any more praise of its awesomeness to the web. Instead, I'm going to list the great Flask extensions I  use to enable me to develop Esther in a breeze.\r\n\r\nFlask has an [extensions registry](http://flask.pocoo.org/extensions/) on its website that lists most the available third-party packages you can use in your project. Armin did a great job of cultivating the Flask ecosystem and all the packages share the same \"branding\" in terms of naming conventions, documentation style (and existence!), and of course API usage.\r\n\r\nOne of the best aspects of this page are the little light grey stars next to \"approved extensions.\" This feature represents a big philosophical difference between Flask and Django. The Django BDFLs (benevolent dictators for life) aren't keen on endorsing any third party packages and I can only think of one or two places in the docs where other Django apps are mentioned. \r\n\r\nFlask on the other hand makes it easier for newcomers to find the right tools to use. I like this approach but can appreciate why Django doesn't do this. Many of the approved extensions are for features that ship with Django and so third-party app endorsements are less necessary. On the other hand, moving the contrib apps out of the Django's core is a topic frequently broached on the [django-developers](https://groups.google.com/forum/?fromgroups#!forum/django-developers) mailing list. I really support this move, partly based on my experience with Flask and its extensions. If this happened, alternatives to the contrib apps could (should?) be mentioned in that app's docs. But I digress\r\n\r\nHere are the Flask extensions I used to build Esther:\r\n\r\n* [Flask-SQLAlchemy](http://packages.python.org/Flask-SQLAlchemy/) - Provides some integration with [SQLAlchemy](http://www.sqlalchemy.org/).\r\n* [Flask-Bcrypt](https://github.com/maxcountryman/flask-bcrypt/) - Used for password hashing. Wraps [py-bcrypt](http://www.mindrot.org/projects/py-bcrypt/).\r\n* [Flask-WTF](http://packages.python.org/Flask-WTF/) - Integrates Flask with [WTForms](http://wtforms.simplecodes.com/).\r\n* [Flask-Mail](http://packages.python.org/flask-mail/) - Used to send e-mail.\r\n* [Flask-Login](http://packages.python.org/Flask-Login/) - A framework for rolling your own authentication.\r\n* [Flask-Script](http://flask-script.readthedocs.org/en/latest/) - A slick framework for writing management commands.\r\n* [Flask-DebugToolbar](http://pypi.python.org/pypi/Flask-DebugToolbar) - The younger sibling of [django-debug-toolbar](https://github.com/django-debug-toolbar/django-debug-toolbar)\r\n* [Flask-Testing](http://packages.python.org/Flask-Testing/) - A thin wrapper around the unittest module that adds some convenient assertion methods (similar to those on ``django.test.TestCase``).\r\n\r\nAs you can see, most of these packages provide features that exist in Django core, but they enable Flask to stay lean.\r\n\r\n## TODO\r\n\r\nEsther is by no means done and I'm closing this post with a list of features I'd like to add in the next few months:\r\n\r\n* Automatic slug generation\r\n* Live Markdown preview\r\n* A tagging system\r\n* RSS feeds\r\n* Foundation customization\r\n* Caching (traffic-dependent)\r\n* [Disqus](http://disqus.com/) comments\r\n\r\nAs always, stay tuned.",
    "created": "Sun, 18 Nov 2012 14:51:59 GMT",
    "id": 6,
    "modified": "Sat, 29 Dec 2012 13:44:18 GMT",
    "pub_date": "Sun, 18 Nov 2012 16:35:48 GMT",
    "slug": "say-hello-to-esther",
    "status": "published",
    "tags": [
      {
        "id": 7,
        "name": "flask",
        "slug": "flask"
      },
      {
        "id": 5,
        "name": "web development",
        "slug": "web-development"
      }
    ],
    "title": "Say Hello to Esther"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "[AngularJS](http://angularjs.org/) is an awesome Javascript framework that helps you build slick web apps. Today I started working through [its tutorial](http://docs.angularjs.org/tutorial/) and was happy to find that the authors really emphasized testing from the get-go. \r\n\r\nUnlike the [Django tutorial](https://docs.djangoproject.com/en/dev/intro/), for example, which unfortunately doesn't mention testing at all, Angular introduces you to its testing facilities in the [third section](http://docs.angularjs.org/tutorial/step_02). It makes it clear that testing is an integral part of the \"Angular way,\" and this is something I really love about the framework.\r\n\r\nOne of Angular's coolest features is [end-to-end (\"E2E\") testing](http://docs.angularjs.org/guide/dev_guide.e2e-testing). You create a bunch of scenarios and write [behavior-driven development](http://en.wikipedia.org/wiki/Behavior-driven_development) (BDD) style tests in Javascript that are then tested in the browser.\r\n\r\n![Angular's end-to-end test runner](https://ryankaskel.com/static/img/blog/posts/angular-e2e-runner.png)\r\nAngular's end-to-end test runner after a successful test.\r\n\r\nWhile doing the tutorial, I thought about how I would integrate the end-to-end testing feature into an existing [Flask](http://flask.pocoo.org/) app. Most of the available Angular resources assume you are working with static HTML/Javascript/CSS files served by a web server. Indeed, Angular seems to prefer a static front-end talking to a separate back-end via a [REST](http://en.wikipedia.org/wiki/Representational_state_transfer) interface. \r\n\r\nFor whatever reason, I'm not quite ready to go that route. My Angular app is delivered to the browser via Jinja2 templates and I needed to find a way to integrate the end-to-end test runner template into my Flask app.\r\n\r\n<!-- preview -->\r\n\r\nNow this is a trivial task, but I like to separate test code from application code. Since I will only every use the E2E runner template in a development context, there's no point in sticking ugly ``if DEBUG`` statements in production code. To solve this problem, I used [Flask blueprints](http://flask.pocoo.org/docs/blueprints/).\r\n\r\nThe top level directory structure of my projects that use Flask typically look something like this:\r\n\r\n    :::bash\r\n    $ tree -L 1 myproject\r\n    myproject/\r\n    ├── docs\r\n    ├── flaskapp\r\n    ├── requirements\r\n    ├── run.py\r\n    └── tests\r\n\r\nTests is a Python package containing test code and ``run.py`` contains useful management commands implemented using the flexible [Flask-Script](http://flask-script.readthedocs.org/en/latest/) extension.\r\n\r\nTo achieve the code separation I wanted, I created a blueprint in ``tests.angular``, a subpackage with the following layout:\r\n\r\n    :::bash\r\n    $ tree -L 4 tests/angular\r\n    tests/angular\r\n    ├── __init__.py\r\n    ├── static\r\n    │   └── js\r\n    │       ├── lib\r\n    │       │   ├── angular-mocks.js\r\n    │       │   └── angular-scenario.js\r\n    │       └── scenarios.js\r\n    ├── templates\r\n    │   └── angular\r\n    │       └── runner.html\r\n    └── views.py\r\n\r\nThe blueprint has a single view called ``runner``, which simply returns the runner template:\r\n\r\n    :::python\r\n    from flask import Blueprint, render_template\r\n\r\n    bp = Blueprint('angular', __name__, template_folder='templates',\r\n                   static_folder='static')\r\n\r\n    @bp.route('/runner')\r\n    def runner():\r\n        return render_template('angular/runner.html')\r\n\r\nThe [``Blueprint`` class](http://flask.pocoo.org/docs/api/#blueprint-objects) allows you to pass two important keyword arguments that make this approach possible: ``template_folder`` and ``static_folder``. These arguments allow the Flask blueprint to act similarly to a reusable, self-contained Django app when the app directory [template loader](https://docs.djangoproject.com/en/dev/ref/templates/api/#loader-types) and static files [finder](https://docs.djangoproject.com/en/dev/ref/contrib/staticfiles/#staticfiles-finders)  are enabled. The templates and static media live in a different package, outside of their usual locations in the production app.\r\n\r\nHere are the relevant ``<script>`` tags from the ``runner.html`` template:\r\n\r\n    :::html\r\n    <script src=\"{{ url_for('angular.static', filename='js/lib/angular-scenario.js') }}\" ng-autotest></script>\r\n    <script src=\"{{ url_for('angular.static', filename='js/scenarios.js') }}\"></script>\r\n\r\nThe ``run.py`` module in the top-level directory has a useful command called \"server\" that [runs](http://flask.pocoo.org/docs/api/#flask.Flask.run) the app from the [Werkzeug development server](http://werkzeug.pocoo.org/docs/serving/#werkzeug.serving.run_simple). Right before running the server, I import the Angular blueprint and register it \"after-the-fact.\" It looks like this:\r\n\r\n    :::python\r\n    app = create_app()\r\n    manager = Manager(app)\r\n\r\n    @manager.command\r\n    def server(toolbar=False):\r\n        app.debug = True\r\n\r\n        from tests.angular.views import bp as angular_bp\r\n        app.register_blueprint(angular_bp, url_prefix='/tests/angular')\r\n\r\n        if toolbar:\r\n            try:\r\n                from flask_debugtoolbar import DebugToolbarExtension\r\n            except ImportError:\r\n                pass\r\n            else:\r\n                DebugToolbarExtension(app)\r\n\r\n        app.run()\r\n\r\nThere's nothing complicated about this approach, but it highlights the power (and beauty) of the Flask [application factory pattern](http://flask.pocoo.org/docs/patterns/appfactories/) and the \"little\" object it returns. A Flask application is really useful and the fact that you can register blueprints on it *after* creation is how I successfully decoupled the templates and Javascript files Angular's awesome end-to-end testing requires.\r\n\r\n## What's next\r\n\r\nThe Angular testing story doesn't end here. The framework's authors have also created a superb test runner called [Testacular](https://github.com/vojtajina/testacular). In the [Angular Seed project](https://github.com/angular/angular-seed) (and the tutorial which is seeded from it), Testacular automatically runs end-to-end tests and unit tests whenever a Javascript file changes. I'm still working on integrating Testacular into my Flask projects and will likely write about how that goes in the future.\r\n",
    "created": "Sat, 24 Nov 2012 20:03:57 GMT",
    "id": 7,
    "modified": "Sat, 16 Mar 2013 11:50:06 GMT",
    "pub_date": "Sun, 25 Nov 2012 08:30:13 GMT",
    "slug": "end-to-end-testing-with-angularjs-and-flask",
    "status": "published",
    "tags": [
      {
        "id": 8,
        "name": "angularjs",
        "slug": "angularjs"
      },
      {
        "id": 7,
        "name": "flask",
        "slug": "flask"
      },
      {
        "id": 9,
        "name": "javascript",
        "slug": "javascript"
      },
      {
        "id": 6,
        "name": "programming",
        "slug": "programming"
      },
      {
        "id": 4,
        "name": "testing",
        "slug": "testing"
      },
      {
        "id": 5,
        "name": "web development",
        "slug": "web-development"
      }
    ],
    "title": "End to End Testing with AngularJS and Flask"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "At PyCon 2012, Carl Meyer gave an excellent talk on testing with Django ([watch the video](http://pyvideo.org/video/699/testing-and-django) or [view the slides](http://carljm.github.com/django-testing-slides/#1)). Right off the bat he calls out Django's rather odd test runner. He [notes](http://carljm.github.com/django-testing-slides/#7) that:\r\n\r\n* Django runs whatever tests it finds in ``INSTALLED_APPS``. This includes all apps in ``django.contrib`` (e.g. ``auth`` and ``contenttypes`` ). It also includes the tests from pluggable apps you've installed from PyPI or elsewhere. This is a waste of time because we trust these have been tested before being released by the developers who created them. (Also note that test failures for apps in ``django.contrib`` when run alongside third-party apps have historically been the source of much pain prior to Django releases. See [ticket #17848](https://code.djangoproject.com/ticket/17848) for at least one example)\r\n* Tests have to be in a ``tests`` module in the app (or a ``tests`` subpackage that requires you to import your test cases into ``tests/__init__.py``. This is unlike the rest of the Python ecosystem (or that of most other languages I've seen), where tests typically live in a separate package.\r\n* Test code lives alongside production code.\r\n\r\nDjango also requires you to specify which tests to run using ``app.TestCase`` notation instead of just specifying the path to the module and test case (i.e.``app.tests.TestCase``), which I think is more intuitive.\r\n\r\nTo remedy this situation, Carl suggests using a simple ``DjangoTestSuiteRunner`` subclass he calls ``DiscoveryRunner``. It uses the newer [test discovery mechanism](http://docs.python.org/2/library/unittest.html#test-discovery) incorporated into Python's ``unittest`` package in Python 2.7. If you are using an earlier version of Python, you're covered. Django includes its own copy of the ``unittest`` package in ``django.utils.unittest``. Jannis Leidel later packaged up the runner and made it available under the name [``django-discover-runner``](https://github.com/jezdez/django-discover-runner).\r\n\r\nFor my latest Django project, I adopted this test runner and so far I've been very pleased. There are no longer any ``tests`` modules in my apps.  Instead, tests live \"far away\" in a separate package alongside the main project (e.g. ``my-project/project`` and ``my-project/tests``).\r\n\r\n<!-- preview -->\r\n\r\nOne of my favorite Django apps that I rely on heavily is [``django-coverage``](http://pypi.python.org/pypi/django-coverage). It supplies a test runner for Django that makes use of Ned Batchelder's incredibly useful [coverage](http://nedbatchelder.com/code/coverage/beta/) package. After you run your tests, a helpful report is printed in the terminal that indicates the percentage of lines that were run during the tests, along with which lines weren't run. If you specified which tests you want to run as command line arguments, the coverage report only includes modules in those apps. This coverage report is an important tool in my Django development workflow.\r\n\r\n## django-discoverage\r\n\r\nSoon after switching to the new test runner, I realized I lost my coverage reports. I fixed this by creating a new package called [``django-discoverage``](https://github.com/ryankask/django-discoverage), which is also available on [PyPI](http://pypi.python.org/pypi/django-discoverage/). It provides its own test runner, ``discoverage.DiscoverageRunner``, that integrates ``coverage`` and the test runner from ``django-discover-runner``.\r\n\r\nIt tries to behave just like ``django-coverage`` in that it only includes modules from the apps you are explicitly testing in the coverage report. Figuring out which apps are being tested, however, is not trivial anymore because the tests are separate from the apps themselves. \r\n\r\nBy default, ``django-discoverage`` tries to guess which apps you are testing based on the names of the packages your tests are located in. For example, if I had a project with apps ``project.x`` and ``project.y``, I typically put their tests in modules named using the ``test_*.py`` convention in the packages ``tests.x`` and ``tests.y`` (see my typical project layout above). If you then ran the tests, only modules in those apps would be included in the resulting coverage report. While not enabled by default, you can also put tests in a module ``tests.test_x``  which would include ``project.x`` in the coverage report.\r\n\r\nIf this app matching mechanism doesn't fit your project, you can always explicitly specify which apps are being tested by a particular ``TestCase``, module, or package. Please see the project's [README](https://github.com/ryankask/django-discoverage#usage) for a full description on how apps are included in the coverage report.\r\n\r\nAs always, if you find any bugs or have any suggestions, please report them on the [Github issue tracker](https://github.com/ryankask/django-discoverage/issues). Happy testing!",
    "created": "Sun, 09 Dec 2012 16:22:59 GMT",
    "id": 8,
    "modified": "Thu, 27 Dec 2012 09:17:13 GMT",
    "pub_date": "Mon, 10 Dec 2012 08:45:59 GMT",
    "slug": "announcing-django-discoverage",
    "status": "published",
    "tags": [
      {
        "id": 3,
        "name": "django",
        "slug": "django"
      },
      {
        "id": 6,
        "name": "programming",
        "slug": "programming"
      },
      {
        "id": 4,
        "name": "testing",
        "slug": "testing"
      },
      {
        "id": 5,
        "name": "web development",
        "slug": "web-development"
      }
    ],
    "title": "Announcing django-discoverage"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "I came across an interesting blog post a few weeks ago on Hacker News called [\"Foreign Language Learning Hacks\"](http://www.thangudu.com/post/37252447326/language-hacks) ([read the HN comments](http://www.thangudu.com/post/37252447326/language-hacks)). Some of the hacks suggested include:\r\n\r\n* Memorizing lists of the most frequently used words in the language\r\n* Having regular chats with someone who speaks the language natively\r\n* Reading dual language magazines\r\n* Memorizing phrases, movie titles, and idioms\r\n* Listening to music in the language\r\n\r\nThe post resonated with me not because of the specific tips, but because it seems that, like me, most language students have an arsenal of \"hacks\" they use to try to speed up and/or improve the effectiveness of their language learning.\r\n\r\nHow useful are these hacks? Do they really help you learn more quickly?\r\n\r\n## Reflections on Studying Polish\r\n\r\nI've just spent my second Christmas in Poland and last night I found myself sitting at a table with six Poles chatting and eating delicious cakes for three hours. Towards the end, my mind drifted away from the conversation and I began to reflect on my Polish language learning experience.\r\n\r\n<!-- preview -->\r\n\r\nI started my adventure a year and a half ago. I signed up for classes at a small Polish language school called [Polword](http://www.polword.co.uk/en/). I quickly realized that I was never going to seriously learn the language by only going to class for an hour and a half a week and doing some homework.\r\n\r\nLike the author of the aforementioned blog post, I soon began to hack my foreign language learning experience. In the past year and a half I:\r\n\r\n* Bought a series of [grammar](http://www.amazon.co.uk/Basic-Polish-Grammar-Workbook-Workbooks/dp/0415224373/) [books](http://www.amazon.co.uk/Intermediate-Polish-Workbook-Workbooks-ebook/dp/B000Q35VIW/) and completed almost every lesson (nine more to go out of eighty)\r\n* Began to listen to [Radio ZET](http://www.radiozet.pl/) for a few hours every day. I found a few Polish pop artists who produced catchy songs and translated many of their lyrics into English.\r\n* [Watched several movies](https://ryankaskel.com/blog/2012/06/18/published-in-polish) such as the [The Decalogue](http://en.wikipedia.org/wiki/The_Decalogue), [Wszystko, co Kocham](http://www.filmweb.pl/film/Wszystko,+co+kocham-2009-498675), [Wenecja](http://www.filmweb.pl/film/Wenecja-2010-518872), [W ciemności](http://www.filmweb.pl/film/W+ciemno%C5%9Bci-2011-525620), [Seksmisja](http://www.filmweb.pl/Seksmisja), and more.\r\n* Attempted my first [novel in Polish](http://pl.wikipedia.org/wiki/Przygoda_z_owc%C4%85) (still a work in progress and it's going to take a while).\r\n\r\nMy biggest hack yet is my study of Polish verbs, which has been the subject of some of my [earlier](https://ryankaskel.com/blog/2011/11/19/polish-words-of-the-day) [blog posts](https://ryankaskel.com/blog/2012/03/04/discontinuing-ryans-polish-words-of-the-day). I've created [over 500 flashcards on Quizlet](http://pl.wikipedia.org/wiki/Przygoda_z_owc%C4%85) for the most common Polish verbs and have memorized 85% of them using software for my mobile phone. Every free moment of my daily commute has been spent memorizing verbs and it's worked surprisingly well.\r\n\r\nIt's fair to say that I've put in the effort. So how well do I know Polish? Have these hacks really worked?\r\n\r\n## An Honest Assessment\r\n\r\nAt the dinner table last night, I understood about 35% of what was being said. That low percentage suggests I don't know Polish that well and my hacks haven't been too useful. It's difficult to quantify how much you understand because while I can usually grasp the gist of what's being said, I often miss the nuances of the conversation. \r\n\r\nFor example, take the English sentence \"The lethargic dog and the frisky cat get along with each other but once the cat's claw clipped Rosie the dog's left cheek.\" If I heard that contrived sentence in Polish, I would perhaps understand that a dog and cat live with each other and sometimes fight.\r\n\r\nDespite this gloomy initial assessment, I'm still going continue with my hacks. They make learning Polish fun and keep me engaged and constantly studying. Long term commitment is they key to language fluency and hacks have helped strengthen my resolve to learn. The sense of accomplishment after memorizing another set of verbs drive drives me to learn the next one.\r\n\r\nProgramming hacks tend to, among other things, help the developer accomplish a task *quickly*. I don't think language hacks work in the same way. Learning a language takes a lifetime (at least if you aspire to speak it well) and my hacks have thus far helped keep me motivated for the long road ahead. But I need to be realistic: they weren't much use when I tried to add my thoughts to the table banter. Maybe a year and a half isn't enough time to be able to fully participate in a Christmas-time family conversation. Language learning hacks don't really help with *speed*.\r\n\r\nSure, if your goal is to learn 500 verbs, master declension tables, or memorize every word related to cooking, then language hacks work. But last night I realized that doesn't equate to really knowing a language. Time and persistence are the key to successful language study and, for me, hacks can only help with the latter.",
    "created": "Wed, 26 Dec 2012 11:58:46 GMT",
    "id": 9,
    "modified": "Thu, 27 Dec 2012 15:25:12 GMT",
    "pub_date": "Thu, 27 Dec 2012 09:00:24 GMT",
    "slug": "thoughts-on-foreign-language-learning-hacks",
    "status": "published",
    "tags": [
      {
        "id": 1,
        "name": "language",
        "slug": "language"
      },
      {
        "id": 2,
        "name": "polish",
        "slug": "polish"
      }
    ],
    "title": "Thoughts on Foreign Language Learning Hacks"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "Over Christmas 2012, I fulfilled one of my wishes from the past few years: explore the railroads in and around Kłodzko, Poland.\r\n\r\nKłodzko is a small town in Lower Silesia in south-western Poland. It lies in the center of a valley that on the map appears to carve out a chunk of the Czech Republic. The region's principle city of Wrocław is 90 km to the north and to the south, east, and west lies the Czech republic.\r\n\r\nThis unique location makes it ideal for a transport hub. The [European route E67 highway](http://en.wikipedia.org/wiki/European_route_E67) winds its way from Náchod, Czech Republic, through the picturesque mountain spa towns of Kudowa-Zdrój, Dusznicki-Zdrój, and Polanica-Zdrój before reaching Kłodzko.\r\n\r\nDancing around this important highway, barely visible from the road, is a single-track, abandoned railway line that cuts through the surrounding forest. Service ceased a few years ago and the inevitable overgrowth has begun to swallow its rusting rails.\r\n\r\nIt was this line that first piqued my interest in Polish railways and it seemed to indicate that all was not well with the region's rail transport system. \r\n\r\nOn 27 December 2012, I braved the cold weather and drove down to Kłodzko Główne railway station. I was surprised to find a rather busy station with quite a few arrivals and departures during the hour or so I was there. Whatever the bigger picture is with rail in Lower Silesia, my trip to the station that cloudy Thursday morning revealed that life on the track does indeed live on.\r\n\r\n*I apologize for the quality of the pictures. I took them with my mobile phone and its camera isn't great.*\r\n\r\n<hr>\r\n\r\nKłodzko Główne (Kłodzko Central) is one of two stations in the town, the other being Kłodzko Miasto (Kłodzko Town). Despite being further from the town center, Kłodzko Główne seems to be the busier of the pair.\r\n\r\nIt is currently [being renovated](http://www.pkp.pl/node/5394) and construction was ongoing during my visit. The project promises to bring back some of station's historical charm, including the installment of a period clock, while improving access for the disabled.\r\n\r\nMeasures are also being taken against graffiti  which is unfortunately a big problem, especially at its sister station, Kłodzko Miasto.\r\n\r\nThis picture comes from a return trip to the station on 29 December 2012. It was a beautiful, crisp winter day. The blue signs seem new.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/klodzko-glowne.jpg\"><img src=\"/ap-static/media/images/klodzko/klodzko-glowne.jpg\" alt=\"Kłodzko Główne platform sign\"></a>\r\n\r\n<!-- preview -->\r\n\r\nPassengers scramble around the platform. A regional PKP service just terminated having arrived from Wrocław. There is roughly hourly service between Wrocław and Kłodzko. Most trains continue to Kłodzko Miasto and beyond.\r\n\r\nSome of the passengers (not pictured) were carrying skis and were probably using the station as a springboard to some of the nearby spa towns and small ski areas.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/busy-platform.jpg\"><img src=\"/ap-static/media/images/klodzko/busy-platform.jpg\" alt=\"A large crowd on the station platform\"></a>\r\n\r\nI spent the day skiing at [Zieleniec](http://www.zieleniec.pl/), which lies west of Kłodzko on the border of the Czech Republic.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/ski-area.jpg\"><img src=\"/ap-static/media/images/klodzko/ski-area.jpg\" alt=\"Zieleniec, one of the tourist destinations\"></a>\r\n\r\nThis PKP [EN57 EMU](http://en.wikipedia.org/wiki/PKP_class_EN57) awaits its departure back to Wrocław.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/wroclaw-departure.jpg\"><img src=\"/ap-static/media/images/klodzko/wroclaw-departure.jpg\" alt=\"A train waits to depart for Wrocław\"></a>\r\n\r\nThis is the view north from the platform adjacent to the station's ticket hall, which is undergoing a 3.9 million złoty ($1.2 million USD) renovation. Trains to Wrocław bear right while services to [Wałbrzych Główny](http://pl.wikipedia.org/wiki/Wa%C5%82brzych_G%C5%82%C3%B3wny) head left.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/yard-platform-view.jpg\"><img src=\"/ap-static/media/images/klodzko/yard-platform-view.jpg\" alt=\"A look at the yard from the platform\"></a>\r\n\r\nThis is a Dolny Śląsk (Lower Silesia) railway service awaiting departure to the north. Its destination is Ústí nad Orlicí in the Pardubice Region of the Czech Republic. This is one of two routes that begin in Kłodzko and terminate in the Czech Republic. The other service goes to the region's capital, Pardubice. Some services begin in Wrocław.\r\n\r\nTwo companies operate on behalf of the regional government: Koleje Dolnośląskie and Przewozy Regionalne. I believe the latter company operated this service and the one above to Wrocław. This EN71 sports the Dolny Śląsk livery.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/czech-departure.jpg\"><img src=\"/ap-static/media/images/klodzko/czech-departure.jpg\" alt=\"Heading north to the Czech Republic\"></a>\r\n\r\nA [PKP class ET22](http://en.wikipedia.org/wiki/PKP_class_ET22) briefly stopped on its way north to pick up some documents. It then proceeded to the end of the yard where it waited a long time for a signal to clear.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/freight-talk.jpg\"><img src=\"/ap-static/media/images/klodzko/freight-talk.jpg\" alt=\"The driver speaks to a member of staff\"></a>\r\n\r\nA look at the walkway that spans the main yard. I hope a paint job is included in the renovation!\r\n\r\n<a href=\"/ap-static/media/images/klodzko/rusty-bridge.jpg\"><img src=\"/ap-static/media/images/klodzko/rusty-bridge.jpg\" alt=\"This bridge has seen better days\"></a>\r\n\r\nThis picture gives a good overview of the northern half of the yard and station area. These tracks lead north to Kłodzko Miasto and further down the line Bystrzyca Kłodzka, Międzylesie, and ultimately the aforementioned stations in the Czech Republic.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/yard-overview.jpg\"><img src=\"/ap-static/media/images/klodzko/yard-overview.jpg\" alt=\"Looking north over the rail yard\"></a>\r\n\r\nA mixture of empty and full wagons sit in the small yard.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/freight-wagons.jpg\"><img src=\"/ap-static/media/images/klodzko/freight-wagons.jpg\" alt=\"Freight wagons\"></a>\r\n\r\nA good view of the rather empty-looking station building where work is ongoing.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/station-front.jpg\"><img src=\"/ap-static/media/images/klodzko/station-front.jpg\" alt=\"Looking back towards the station\"></a>\r\n\r\nThe station building actually sits in the middle of what once must have been a larger yard. It appears like there is a little maintenance workshop in the distance. I saw two specialized vehicles operating on the these rails but they were otherwise empty. There is a closed single line that leads from these roads to the northern half of the yard and the main line. The main station approach road crosses it, perhaps explaining its closure.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/closed-yard.jpg\"><img src=\"/ap-static/media/images/klodzko/closed-yard.jpg\" alt=\"The less busy side of the yard\"></a>\r\n\r\nNot near the railway, but a great view of Kłodzko and the valley from the a nearby hill.\r\n\r\n<a href=\"/ap-static/media/images/klodzko/klodzko-hill-view.jpg\"><img src=\"/ap-static/media/images/klodzko/klodzko-hill-view.jpg\" alt=\"Kłodzko from a hill\"></a>\r\n\r\nIf I've made any mistakes, please let me know by [contacting me](https://ryankaskel.com/contact).",
    "created": "Sun, 17 Feb 2013 16:16:37 GMT",
    "id": 10,
    "modified": "Mon, 18 Feb 2013 08:31:21 GMT",
    "pub_date": "Mon, 18 Feb 2013 08:31:21 GMT",
    "slug": "exploring-klodzko-glowne-railway-station",
    "status": "published",
    "tags": [
      {
        "id": 15,
        "name": "poland",
        "slug": "poland"
      },
      {
        "id": 13,
        "name": "trains",
        "slug": "trains"
      },
      {
        "id": 14,
        "name": "transport",
        "slug": "transport"
      }
    ],
    "title": "Exploring Kłodzko Główne Railway Station"
  },
  {
    "author": {
      "email": "webmaster@ryankaskel.com",
      "full_name": "Ryan Kaskel",
      "id": 1,
      "is_active_user": true,
      "is_admin": true,
      "short_name": "Ryan"
    },
    "author_id": 1,
    "body": "that frequently comes up when using [AngularJS's routing](http://docs.angularjs.org/api/ng.$route) is how to apply styles to navigation menus.\r\n\r\nSpecifically, how do you go about changing the background color of an ``<a>`` or ``<li>`` element in a navigation menu for the currently active route?\r\n\r\nFor example, the \"Home\" ``<a>`` in the below navigation menu needs to have its background color changed when the root of the site (``/``) is loaded or the link is clicked when on another \"page.\"\r\n\r\n<a href=\"/ap-static/media/images/navigation/sample1.png\"><img src=\"/ap-static/media/images/navigation/sample1.png\" alt=\"A simple navigation menu.\"></a>\r\n\r\nI had the same question a few weeks ago and found many answers on blogs and StackOverflow. A lot of the approaches I found were similar. For example, this snippet from [codef0rmer](http://amitgharat.wordpress.com/2012/09/19/page-navigation-bar-in-angular-js/):\r\n\r\n    :::html\r\n    <ul class=\"nav nav-list\" ng-controller=\"navCtrl\">\r\n      <li ng-class=\"navClass('home')\"><a href='#/home'>Home</a></li>\r\n      <li ng-class=\"navClass('about')\"><a href='#/about'>About Us</a></li>\r\n      <li ng-class=\"navClass('contact')\"><a href='#/contact'>Contact Us</a></li>\r\n    </ul>\r\n\r\nThese examples come from [Stack Overflow](http://stackoverflow.com/questions/12592472/how-to-highlight-a-current-menu-item-in-angularjs):\r\n\r\n    :::html\r\n    <ul class=\"nav\">\r\n      <li ng-class=\"getClass('/')\"><a href=\"#/\">Home</a></li>\r\n      <li ng-class=\"getClass('/contents/')\"><a href=\"#/contests/\">Contents</a></li>\r\n      <li ng-class=\"getClass('/data/')\"><a href=\"#/data/\">Your data</a></li>\r\n    </ul>\r\n\r\n    <div ng-app=\"link\">\r\n      <a href=\"#/one\" active-link=\"active\">One</a>\r\n      <a href=\"#/two\" active-link=\"active\">One</a>\r\n      <a href=\"#\" active-link=\"active\">home</a>\r\n    </div>\r\n\r\nThe issue I have with these approaches is that there is a lot of directive duplication. Notice that [Angular directives](http://docs.angularjs.org/guide/directive) are applied to each list element or route link.\r\n\r\nFurthermore, in the first two examples, the [``ngClass`` directive](http://docs.angularjs.org/api/ng.directive:ngClass) uses a function that takes the route's path as an argument even though this information is in the child ``<a>`` element's ``href`` attribute.\r\n\r\n<!-- preview -->\r\n\r\nI took a different approach (in the spirit of [this response](http://stackoverflow.com/a/16043331) on Stack Overflow):\r\n\r\n    :::html\r\n    <ul nav-menu>\r\n      <li><a href=\"/\">Home</a></li>\r\n      <li><a href=\"/page/about\">About</a></li>\r\n      <li><a href=\"/page/properties\">Properties</a></li>\r\n      <li><a href=\"/page/services\">Services</a></li>\r\n      <li><a href=\"/page/social\">Social</a></li>\r\n    </ul>\r\n\r\nNotice that only one directive is being applied (``navMenu``). This approach leads to a cleaner view and there is no duplication of data.\r\n\r\nHere is the source of the directive I used (**note: <a href=\"#update\">I've  updated the directive below</a>**):\r\n\r\n    :::js\r\n    directives.directive('navMenu', function($location) {\r\n      return function(scope, element, attrs) {\r\n        var links = element.find('a'),\r\n            link,\r\n            currentLink,\r\n            urlMap = {},\r\n            i;\r\n\r\n        for (i = 0; i < links.length; i++) {\r\n          link = angular.element(links[i]);\r\n          urlMap[link.attr('href')] = link;\r\n        }\r\n\r\n        scope.$on('$routeChangeStart', function() {\r\n          var pathLink = urlMap[$location.path()];\r\n\r\n          if (pathLink) {\r\n            if (currentLink) {\r\n              currentLink.removeClass('on');\r\n            }\r\n            currentLink = pathLink;\r\n            currentLink.addClass('on');\r\n          }\r\n        });\r\n      };\r\n    });\r\n\r\n\r\nWhile I didn't include the controller functions or directives for the other examples, this directive is much longer in terms of code length. To me, it's a small price to pay for a clean view.\r\n\r\nIf you aren't using HTML5 mode with [``$locationProvider``](http://docs.angularjs.org/api/ng.$locationProvider), you might need to make some adjustments to the code above when creating the URL map.\r\n\r\nNotice any mistakes or have a suggestion? Leave a comment below!\r\n\r\n<div id=\"update\"></div>\r\n\r\n## Update\r\n\r\n*8 October 2013* - I've updated the directive based on the great feedback I've gotten in the comments.\r\n\r\nThe directive now supports both the default hash mode (including hash prefixes like \"!\") and HTML5 mode.\r\n\r\nIn addition, you can now specify the class to add to the ``<a>`` element when the link is active by assigning a value to the directive attribute (it defaults to \"on\"):\r\n\r\n\r\n    :::html\r\n    <ul nav-menu=\"active\">\r\n      <li><a href=\"/\">Home</a></li>\r\n      ...\r\n    </ul>\r\n\r\n\r\nHere is the updated directive:\r\n\r\n\r\n    directives.directive('navMenu', function($location) {\r\n      return function(scope, element, attrs) {\r\n        var links = element.find('a'),\r\n            onClass = attrs.navMenu || 'on',\r\n            routePattern,\r\n            link,\r\n            url,\r\n            currentLink,\r\n            urlMap = {},\r\n            i;\r\n\r\n        if (!$location.$$html5) {\r\n          routePattern = /^#[^/]*/;\r\n        }\r\n\r\n        for (i = 0; i < links.length; i++) {\r\n          link = angular.element(links[i]);\r\n          url = link.attr('href');\r\n\r\n          if ($location.$$html5) {\r\n            urlMap[url] = link;\r\n          } else {\r\n            urlMap[url.replace(routePattern, '')] = link;\r\n          }\r\n        }\r\n\r\n        scope.$on('$routeChangeStart', function() {\r\n          var pathLink = urlMap[$location.path()];\r\n\r\n          if (pathLink) {\r\n            if (currentLink) {\r\n              currentLink.removeClass(onClass);\r\n            }\r\n            currentLink = pathLink;\r\n            currentLink.addClass(onClass);\r\n          }\r\n        });\r\n      };\r\n    });\r\n\r\n\r\nIf you come across any issues or have any suggestions, please let me know in the comments.",
    "created": "Mon, 27 May 2013 08:32:55 GMT",
    "id": 11,
    "modified": "Fri, 21 Mar 2014 20:06:28 GMT",
    "pub_date": "Mon, 27 May 2013 20:23:51 GMT",
    "slug": "a-different-approach-to-angularjs-navigation-menus",
    "status": "published",
    "tags": [
      {
        "id": 8,
        "name": "angularjs",
        "slug": "angularjs"
      },
      {
        "id": 9,
        "name": "javascript",
        "slug": "javascript"
      },
      {
        "id": 5,
        "name": "web development",
        "slug": "web-development"
      }
    ],
    "title": "A Different Approach to AngularJS Navigation Menus"
  }
]
